
<!-- form itself -->
<!-- <form id="test-form" class="white-popup-block mfp-hide"> -->
<%= form_for Copyright.new, as: :post, url: copyrights_path, method: "POST", html: {id: 'test-form', class: "white-popup-block mfp-hide"} do |f| %>
<div class="container">
  <div class="frame">
    <h1>Add Your Image</h1>
    <div ng-app="ng-app" ng-init="checked = false">

      <label for="username">Name</label>
      <!-- <input class="form-styling" type="text" name="username" placeholder="File name"/> -->
      <%= f.text_field :name, name: "name", id: "copyright_name", class: "form-styling", placeholder: "File name" %>
      <div class="file-upload">
        <button class="file-upload-btn" type="button" onclick="$('.file-upload-input').trigger( 'click' )">Add Image</button>

        <div class="image-upload-wrap">
          <%= f.file_field :image, name: "image", id: "copyright_image", class: "file-upload-input", onchange: "readURL(this);", accept: "image/*" %>
          <!-- <input class="file-upload-input" type='file' onchange="readURL(this);" accept="image/*" /> -->
          <div class="drag-text">
            <h3>Drag and drop a file or select add Image</h3>
          </div>
        </div>
        <div class="file-upload-content">
          <img class="file-upload-image" src="#" alt="your image"/>
          <div class="image-title-wrap">
            <button type="button" onclick="removeUpload()" class="remove-image">Remove
              <span class="image-title">Uploaded Image</span></button>
          </div>
        </div>
      </div>
      <div class="btn-animate">
        <%= f.hidden_field :user_id, name: "user_id", value: current_user.id %>
        <%= f.hidden_field :uploaded_date, name: "uploaded_date", value: Date.today %>
        <%= f.hidden_field :type_of_file, name: "type_of_file", value: "image" %>
        <%= f.hidden_field :source, name: "source", value: "image" %>
        <%= f.submit "#markitmine" , :class => "btn-signin", :style => "background-color: #1059ff;" %>
      </div>
      <!-- </form> -->
    </div>
  </div>

</div>
<% end %>
<!-- </form> -->

<div class="timeline-container" id="timeline-1">
<div class="timeline-header">
  <h2 class="timeline-header__title">#markitmine</h2>
  <h3 class="timeline-header__subtitle">#markitmine and make it yours. :)</h3>
</div>

<!-- link that opens popup -->
<div class="add-photos">
  <a href="#test-form" class="popup-with-form"><%= image_tag("add.png", size:"40", alt: "Add your image", title: "Add your image") %></a>
</div>

<div class="timeline">
  <% @copyrights.where(user_id: [current_user.id]).order("id DESC").each do |copyright| %>
    <div class="timeline-item" data-text="<%= copyright.name %>">
      <div class="timeline__content">
        <% if copyright.photo_url.present? %>
        <a href="<%= copyright.photo_url %>" class="image-link">
          <img class="timeline__img" src="<%= copyright.photo_url %>"/>
        </a>
        <% else %>
          <a href="<%= copyright.image.expiring_url %>" class="image-link">
            <img class="timeline__img" src="<%= copyright.image.expiring_url %>"/>
          </a>
        <% end %>
        <h2 class="timeline__content-title">&nbsp;</h2>
        <p class="timeline__content-desc" style="min-height: 80px;"></p>
      </div>
    </div>
  <% end %>
</div>
</div>

<script type="text/javascript">
(function ($) {
  $.fn.timeline = function () {
    var selectors = {
      id: $(this),
      item: $(this).find(".timeline-item"),
      activeClass: "timeline-item--active",
      img: ".timeline__img"
    };
    selectors.item.eq(0).addClass(selectors.activeClass);
    selectors.id.css("background-image", "url(" + selectors.item.first().find(selectors.img).attr("src") + ")");
    var itemLength = selectors.item.length;
    $(window).scroll(function () {
      var max,
        min;
      var pos = $(this).scrollTop();
      selectors.item.each(function (i) {
        min = $(this).offset().top;
        max = $(this).height() + $(this).offset().top;
        var that = $(this);
        if (i == itemLength - 2 && pos > min + $(this).height() / 2) {
          selectors.item.removeClass(selectors.activeClass);
          selectors.id.css("background-image", "url(" + selectors.item.last().find(selectors.img).attr("src") + ")");
          selectors.item.last().addClass(selectors.activeClass);
        } else if (pos <= max - 40 && pos >= min) {
          selectors.id.css("background-image", "url(" + $(this).find(selectors.img).attr("src") + ")");
          selectors.item.removeClass(selectors.activeClass);
          $(this).addClass(selectors.activeClass);
        }
      });
    });
  };
})(jQuery);

$("#timeline-1").timeline();

(function () {

  // Initialize popup as usual
  $('.image-link').magnificPopup({
    type: 'image', mainClass: 'mfp-with-zoom', // this class is for CSS animation below
    zoom: {
      enabled: true, // By default it's false, so don't forget to enable it

      duration: 300, // duration of the effect, in milliseconds
      easing: 'ease-in-out', // CSS transition easing function

      // The "opener" function should return the element from which popup will be zoomed in and to which popup will be scaled down By defailt it looks for an image tag:
      opener: function (openerElement) {
        // openerElement is the element on which popup was initialized, in this case its <a> tag you don't need to add "opener" option if this code matches your needs, it's defailt one.
        return openerElement.is('img')
          ? openerElement
          : openerElement.find('img');
      }
    }

  });

  $('.popup-with-form').magnificPopup({
    type: 'inline', preloader: false, focus: '#name',
    removalDelay: 300,

    // Class that is added to popup wrapper and background
    // make it unique to apply your CSS animations just to this exact popup
    mainClass: 'mfp-fade',

    // When elemened is focused, some mobile browsers in some cases zoom in It looks not nice, so we disable it:
    callbacks: {
      beforeOpen: function () {
        if ($(window).width() < 700) {
          this.st.focus = false;
        } else {
          this.st.focus = '#name';
        }
      }
    }
  });
}());

function readURL(input) {
  if (input.files && input.files[0]) {

    var reader = new FileReader();

    reader.onload = function (e) {
      $('.image-upload-wrap').hide();

      $('.file-upload-image').attr('src', e.target.result);
      $('.file-upload-content').show();

      $('.image-title').html(input.files[0].name);
    };

    reader.readAsDataURL(input.files[0]);

  } else {
    removeUpload();
  }
}

function removeUpload() {
  $('.file-upload-input').replaceWith($('.file-upload-input').clone());
  $('.file-upload-content').hide();
  $('.image-upload-wrap').show();
}
$('.image-upload-wrap').bind('dragover', function () {
  $('.image-upload-wrap').addClass('image-dropping');
});
$('.image-upload-wrap').bind('dragleave', function () {
  $('.image-upload-wrap').removeClass('image-dropping');
});
</script>
